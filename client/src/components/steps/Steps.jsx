import React, { useState } from 'react'
import Box from '@mui/material/Box'
import Stepper from '@mui/material/Stepper'
import Step from '@mui/material/Step'
import StepLabel from '@mui/material/StepLabel'
import StepContent from '@mui/material/StepContent'
import Button from '@mui/material/Button'
import Paper from '@mui/material/Paper'
import Typography from '@mui/material/Typography'
import TransitionsModal from 'components/Modal/TransitionsModal'
import './styles.scss'

const steps = [
  {
    label: '–í —á–æ–º—É —ñ–¥–µ—è? üß†',
    description: '–í–∏ –æ—Ç—Ä—É–º—É—î—Ç–µ –∑–Ω–∏–∂–∫—É - –º–∏ –æ—Ç—Ä—É–º—É—î–º–æ —Ä–µ–∫–ª–∞–º—É, –≤—Å–µ –¥—É–∂–µ –ø—Ä–æ—Å—Ç–æ —ñ –∑—Ä–æ–∑—É–º—ñ–ª–æ ',
  },
  {
    label: '–Ø–∫ —Ü–µ –±—É–¥—É –≤–∏–≥–ª—è–¥–∞—Ç–∏? üëÄ',
    description:
      '–û—Å—å –ø—Ä–∏–∫–ª–∞–¥–∏ –ø–æ—Å—Ç—ñ–≤ –Ω–∞—à–∏—Ö –∫–ª—ñ—î–Ω—Ç—ñ–≤. {{link_to_the_posts}}',
  },
  {
    label: '–©–æ —Ç—Ä–µ–±–∞ –∑—Ä–æ–±–æ—Ç–∏? üì∏',
    description: '–û–±–æ–≤ º—è–∑–∫–æ–≤–æ —Ç–µ–≥–Ω–∏ –Ω–∞—à –º–∞–≥–∞–∑—ñ–Ω –≤ —Å—Ç–æ—Ä–∏—Å –∞–±–æ –≤ –ø–æ—Å—Ç—É –ø–æ —Ç–µ–≥—É {{shop_tag}}. –Ü –≤—Å–µ! –¢–≤–æ—è –∑–Ω–∏–∂–∫–∞ –≤–∂–µ —Å—Ñ–æ—Ä–º–æ–≤–∞–Ω–∞!',
  },
]

export default function VerticalLinearStepper() {
  const [activeStep, setActiveStep] = useState(0)
  const [open, setOpen] = useState(false)
  const [formValues, setFormValues] = useState({
    name: ''
  })
  const handleSubmit = () => {
    console.log('Form values:', formValues)
    document.location.href =('https://api.instagram.com/oauth/authorize?client_id=799742371516522&redirect_uri=https://react-sytem.space/&scope=user_profile,user_media&response_type=code')
  }
  const handleInputChange = (event) => {
    setFormValues(event.target.value)
  }
  const handleNext = () => {
    setActiveStep((prevActiveStep) => prevActiveStep + 1)
  }
  const handleBack = () => {
    setActiveStep((prevActiveStep) => prevActiveStep - 1)
  }
  const handleReset = () => {
    setActiveStep(0)
  }
  const handleOpen = () => {
    setOpen(true)
  }
  const handleClose = () => {
    setOpen(false)
  }

  return (
    <Box sx={{ maxWidth: 400 }}>
      <Stepper activeStep={activeStep} orientation="vertical">
        {steps.map((step, index) => (
          <Step key={step.label}>
            <StepLabel
              optional={
                index === 2 ? (
                  <Typography variant="caption">–û—Å—Ç–∞–Ω–Ω—ñ–π –∫—Ä–æ–∫</Typography>
                ) : null
              }
            >
              {step.label}
            </StepLabel>
            <StepContent>
              <Typography>{step.description}</Typography>
              <Box sx={{ mb: 2 }}>
                <div>
                  <Button
                    variant="contained"
                    onClick={handleNext}
                    sx={{ mt: 1, mr: 1 }}
                  >
                    {index === steps.length - 1 ? '–û–∫—ñ, —è –∑–∞!' : '–î–∞–ª—ñ'}
                  </Button>
                  <Button
                    disabled={index === 0}
                    onClick={handleBack}
                    sx={{ mt: 1, mr: 1 }}
                  >
                    –ù–∞–∑–∞–¥
                  </Button>
                </div>
              </Box>
            </StepContent>
          </Step>
        ))}
      </Stepper>
      {activeStep === steps.length && (
        <Paper square elevation={0} sx={{ p: 3 }}>
          <Typography>
            –Ø–∫—â–æ —Ç–∏ –≤ –¥—ñ–ª—ñ –∑—Ä–æ–±–∏—Ç–∏ —Å—Ç–æ—Ä—ñ—Å —á–∏ –ø–æ—Å—Ç, –Ω–∞–º –≤—Å–µ –æ–¥–Ω–æ üòé, –ø–æ–∫–∞–∑—É–π QR —è–∫–∏–π —Å—Ñ–æ—Ä–º—É—î—Ç—å—Å—è –ø—Ä–æ–¥–∞–≤—Ü—é —ñ –æ—Ç—Ä–∏–º—É–≤–∞–π —Å–≤–æ—é —Å–∫–∏–¥–∫—É
          </Typography>
          <div className='l-buttons-container'>
            <Button onClick={handleReset}>
              –î–∞–≤–∞–π –ø–æ –Ω–æ–≤—ñ–π –ú—ñ—à–∞
            </Button>
            <Button onClick={handleOpen} variant="contained">–Ø –≤ –¥—ñ–ª—ñ!</Button>
            <TransitionsModal
              open={open}
              handleClose={handleClose}
              onSubmit={handleSubmit}
              onInputChange={handleInputChange}
            />
          </div>
        </Paper>
      )}
    </Box>
  )
}